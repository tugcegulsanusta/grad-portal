package com.tugceusta.project.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GraduationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGraduationAllPropertiesEquals(Graduation expected, Graduation actual) {
        assertGraduationAutoGeneratedPropertiesEquals(expected, actual);
        assertGraduationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGraduationAllUpdatablePropertiesEquals(Graduation expected, Graduation actual) {
        assertGraduationUpdatableFieldsEquals(expected, actual);
        assertGraduationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGraduationAutoGeneratedPropertiesEquals(Graduation expected, Graduation actual) {
        assertThat(expected)
            .as("Verify Graduation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGraduationUpdatableFieldsEquals(Graduation expected, Graduation actual) {
        assertThat(expected)
            .as("Verify Graduation relevant properties")
            .satisfies(e -> assertThat(e.getStartYear()).as("check startYear").isEqualTo(actual.getStartYear()))
            .satisfies(e -> assertThat(e.getGraduationYear()).as("check graduationYear").isEqualTo(actual.getGraduationYear()))
            .satisfies(e -> assertThat(e.getGpa()).as("check gpa").isEqualTo(actual.getGpa()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGraduationUpdatableRelationshipsEquals(Graduation expected, Graduation actual) {
        assertThat(expected)
            .as("Verify Graduation relationships")
            .satisfies(e -> assertThat(e.getSchoolId()).as("check schoolId").isEqualTo(actual.getSchoolId()))
            .satisfies(e -> assertThat(e.getGradId()).as("check gradId").isEqualTo(actual.getGradId()));
    }
}
